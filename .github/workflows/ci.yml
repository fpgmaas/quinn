name: Unit tests

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]
  workflow_dispatch:

jobs:

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pyspark-version: ["3.0.3", "3.1.3", "3.2.4", "3.3.2", "3.4.0"]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        exclude:
          - pyspark-version: "3.0.3"
            python-version: "3.11"
          - pyspark-version: "3.0.3"
            python-version: "3.12"
          - pyspark-version: "3.1.3"
            python-version: "3.11"
          - pyspark-version: "3.1.3"
            python-version: "3.12"
          - pyspark-version: "3.2.4"
            python-version: "3.11"
          - pyspark-version: "3.2.4"
            python-version: "3.12"
          - pyspark-version: "3.3.2"
            python-version: "3.11"
          - pyspark-version: "3.3.2"
            python-version: "3.12"
        include: 
          - pyspark-version: "2.4.8"
            python-version: "3.7"

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "8"  # Supported by Spark 2.x & 3.x

      - name: Set up the environment
        uses: ./.github/actions/setup-poetry-env
        with:
          python-version: ${{ matrix.python-version }}
          optional-dependency-groups: "development,testing,linting"

      - name: Change PySpark to version ${{ matrix.pyspark-version }}
        run: poetry run pip install pyspark==${{ matrix.pyspark-version }}  # Using pip shouldn"t mess up poetry cache

      - name: Run tests for Python ${{ matrix.python-version }} and PySpark ${{ matrix.pyspark-version }}
        run: make test

  check-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Set up the environment
        uses: ./.github/actions/setup-poetry-env
        with:
          optional-dependency-groups: "docs"

      - name: Check if documentation can be built
        run: poetry run mkdocs build